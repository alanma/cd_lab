apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'cargo'
//apply from: "$rootDir/gradle/functionalTest.gradle"
apply from: "$rootDir/gradle/publishMaven.gradle"
//apply from: "$rootDir/gradle/sshDeploy.gradle"
//apply from: "$rootDir/gradle/smokeTest.gradle"
//apply from: "$rootDir/gradle/cargoDeploy.gradle"
//apply from: "$rootDir/gradle/downloadWar.gradle"



buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5.1'
    }
}

cargo {
    containerId = 'tomcat7x'
    port = 9292

    remote {
        /*
        deployable {
            file = file("$buildDir/download/artifacts/todo-web-" + project.version.toString() + ".war")
        }*/

        hostname = 'localhost'

        username = 'tomcat'
        password = 'tomcat'
    }
}
//tasks.cargoDeployRemote.dependsOn fetchToDoWar





dependencies {
    compile project(':repository')
    providedCompile 'javax.servlet:servlet-api:2.5'
    runtime 'javax.servlet:jstl:1.1.2'
    runtime 'taglibs:standard:1.1.2'
}

task createBuildInfoFile << {
    def buildInfoFile = new File("$buildDir/build-info.properties")
    Properties props = new Properties()
    props.setProperty('version', project.version.toString())
    props.setProperty('timestamp', project.buildTimestamp)
    props.store(buildInfoFile.newWriter(), null)
}

war {
    dependsOn createBuildInfoFile
    baseName = 'todo-web'

    from(buildDir) {
        include 'build-info.properties'
        into('WEB-INF/classes')
    }
}

jettyRun {
	contextPath = 'todo'
}